<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
    <StrongNameKeyId>MicrosoftShared</StrongNameKeyId>
    <HighEntropyVA>true</HighEntropyVA>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Company>Microsoft Corporation</Company>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <Authors>Microsoft</Authors>
    <Serviceable>true</Serviceable>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>http://go.microsoft.com/fwlink/?LinkId=529443</PackageLicenseUrl>

    <!-- 
      The source root path used for deterministic normalization of source paths.
      
      If set the value is used in PathMap to instruct the compiler to normalize source paths 
      emitted to the binary and PDB and as a root for Source Link mapping.
      If set must end with a directory separator.
      
      If unset the PathMap and SourceLinkRoot need to be set explicitly to facilitate 
      correct determinism and source linking.
      
      The path can't be just a single '/' due to bug in Roslyn compilers:
      https://github.com/dotnet/roslyn/issues/22815
    -->
    <DeterministicSourceRoot>/_/</DeterministicSourceRoot>

    <!-- By default do not build nuget package for a project. Project may override. -->
    <IsPackable>false</IsPackable>

    <!--
      NuGet.Build.Tasks.Pack.targets sets the default value of Description property to "Setup Description",
      which causes GenerateAssemblyInfo to generate AssemblyDescription("Setup Description") attribute.
      https://github.com/Microsoft/msbuild/issues/2202
    -->
    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>

    <!--
      Only generate runtimeconfig.json files for .exes of net core apps. It's unnecessary in desktop projects.
    -->
    <GenerateRuntimeConfigurationFiles Condition="'$(TargetFramework)' != 'netcoreapp1.1' and '$(TargetFramework)' != 'netcoreapp2.0'">false</GenerateRuntimeConfigurationFiles>

    <!-- Enable IOperation analyzers -->
    <Features>IOperation,$(Features)</Features>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Language)' == ''">
    <Language Condition="'$(MSBuildProjectExtension)' == '.csproj'">C#</Language>
    <Language Condition="'$(MSBuildProjectExtension)' == '.vbproj'">VB</Language>
    <Language Condition="'$(MSBuildProjectExtension)' == '.fsproj'">F#</Language>
  </PropertyGroup>

  <!--
      When building WPF / VSIX projects MSBuild will create a temporary project with an extension of
      tmp_proj.  In that case the SDK is unable to determine the target language and cannot pick
      the correct import. Need to set it explicitly here.
      See https://github.com/dotnet/project-system/issues/1467
    -->
  <Choose>
    <When Condition="'$(MSBuildProjectExtension)' != '.csproj' and '$(MSBuildProjectExtension)' != '.vbproj' and '$(MSBuildProjectExtension)' != '.shproj'">
      <Choose>
        <When Condition="'$(Language)' == 'C#' or Exists('$(MSBuildProjectDirectory)\$(AssemblyName).csproj')">
          <PropertyGroup>
            <Language>C#</Language>
            <LanguageTargets>$(MSBuildToolsPath)\Microsoft.CSharp.targets</LanguageTargets>
          </PropertyGroup>
        </When>

        <When Condition="'$(Language)' == 'VB' or Exists('$(MSBuildProjectDirectory)\$(AssemblyName).vbproj')">
          <PropertyGroup>
            <Language>VB</Language>
            <LanguageTargets>$(MSBuildToolsPath)\Microsoft.VisualBasic.targets</LanguageTargets>
          </PropertyGroup>
        </When>
      </Choose>
    </When>
  </Choose>

  <Import Project="|Build precondition failed: Unable to determine the language of the project. Consider adding Directory.Build.props that sets Language property to directory '$(MSBuildProjectDirectory)'.|"
          Condition="'$(Language)' == '' and '$(MSBuildProjectExtension)' != '.shproj'"/>

  <Choose>
    <!-- C# specific settings -->
    <When Condition="'$(Language)' == 'C#'">
      <PropertyGroup>
        <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
        <NoWarn>$(NoWarn);1701;1702;1705;1591</NoWarn>
      </PropertyGroup>

      <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
      </PropertyGroup>

      <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <DebugType>full</DebugType>
        <DefineConstants>TRACE</DefineConstants>
        <Optimize>true</Optimize>
      </PropertyGroup>
    </When>

    <!-- VB specific settings -->
    <When Condition="'$(Language)' == 'VB'">
      <PropertyGroup>
        <MyType>Empty</MyType>
        <OptionCompare>Binary</OptionCompare>
        <OptionExplicit>On</OptionExplicit>
        <OptionInfer>On</OptionInfer>
        <OptionStrict>On</OptionStrict>
        <VBRuntime>Embed</VBRuntime>
        <RemoveIntegerChecks>true</RemoveIntegerChecks>
      </PropertyGroup>

      <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <DefineDebug>true</DefineDebug>
        <DefineTrace>true</DefineTrace>
      </PropertyGroup>

      <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <DefineTrace>true</DefineTrace>
        <DebugType>full</DebugType>
        <Optimize>true</Optimize>
      </PropertyGroup>
    </When>
  </Choose>

</Project>