<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!--
    Workaround for incorrect implementation of _LoadPackInputItems target in NuGet.Build.Tasks.Pack.targets.
    The target was fixed in 15.3 but we need to support 15.1 until MicroBuild upgrades.
  -->
  <PropertyGroup Condition="'$(PackProjectInputFile)' == ''">
    <PackProjectInputFile>$(MSBuildProjectFullPath)</PackProjectInputFile>
  </PropertyGroup>

  <!-- Workaround for https://github.com/Microsoft/msbuild/issues/1310 -->
  <Target Name="ForceGenerationOfBindingRedirects"
          AfterTargets="ResolveAssemblyReferences"
          BeforeTargets="GenerateBindingRedirects"
          Condition="'$(AutoGenerateBindingRedirects)' == 'true'">
    <PropertyGroup>
      <!-- Needs to be set in a target because it has to be set after the initial evaluation in the common targets -->
      <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    </PropertyGroup>
  </Target>

  <!--
    Workaround to fix IntelliSense file generation for XAML projects
    https://github.com/dotnet/project-system/issues/2488
  -->
  <Target Name="WorkaroundForXamlIntelliSenseBuildIssue" AfterTargets="_CheckCompileDesignTimePrerequisite">
    <PropertyGroup>
      <BuildingProject>false</BuildingProject>
    </PropertyGroup>
  </Target>

  <!--
    Workaround: In order to leverage LUT testing we need to have both of the following packages:

        - xunit.runner.desktop
        - xunit

    Both of these include xunit.abstractions.dll in different forms: content and reference
    respectively.  This creates a double write violation in our build.  The content item
    is unnecessary for us since we reference the xunit package hence remove it here.

    https://github.com/dotnet/roslyn/issues/18753
  -->
  <Target Name="RemoveDuplicateXUnitContent">
    <ItemGroup>
      <Content Remove="@(Content)" Condition="'%(Filename)%(Extension)' == 'xunit.abstractions.dll'" />
    </ItemGroup>
  </Target>

  <!--
    Work around bug in Microsoft.NET.Sdk < v2.0 where satellites were deployed on top of each other in root.
    https://github.com/dotnet/sdk/issues/1360
  -->
  <Target Name="WorkaroundIncorrectSatelliteDeployment" AfterTargets="ResolveLockFileCopyLocalProjectDeps">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ResourceCopyLocalItems)" />
      <ReferenceCopyLocalPaths Include="@(ResourceCopyLocalItems)"  Condition="'@(ResourceCopyLocalItems)' != ''">
        <DestinationSubDirectory>$([System.IO.Directory]::GetParent(%(ResourceCopyLocalItems.FullPath)).get_Name())\</DestinationSubDirectory>
      </ReferenceCopyLocalPaths>
    </ItemGroup>
  </Target>

  <!--
    XAML targets create a temp project with OutDir set, which makes the SDK create an empty directory for it,
    polluting the output dir. Avoid creating these directories.
    https://github.com/dotnet/sdk/issues/1367
  -->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.tmp_proj'">
    <OutDir/>
  </PropertyGroup>

  <!--
    Workaround for PathTooLongException (see https://github.com/Microsoft/msbuild/issues/1786).
  -->
  <Target Name="WorkaroundAppConfigPathTooLong"
          BeforeTargets="GenerateBindingRedirects">
    <PropertyGroup>
      <_GenerateBindingRedirectsIntermediateAppConfig>$(IntermediateOutputPath)$(TargetFileName).config</_GenerateBindingRedirectsIntermediateAppConfig>
    </PropertyGroup>
  </Target>

  <!--
    Workaround for a race condition https://github.com/Microsoft/msbuild/issues/1479.
  -->
  <PropertyGroup>
    <TargetFrameworkMonikerAssemblyAttributesPath>$(IntermediateOutputPath)$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>

  <!-- Portable PDBs are not included by default -->
  <PropertyGroup Condition="'$(DebugType)' == 'portable'">
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <!-- 
    Override PathMap if DeterministicSourceRoot is set.
  -->
  <Target Name="_SetPathMap"
          BeforeTargets="CoreCompile"
          Condition="'$(DeterministicSourceRoot)' != ''">

    <!-- 
      We should quote the paths to avoid misinterpreting ',' and '=' in them as separators, 
      but quoting doesn't currently work (see https://github.com/dotnet/roslyn/issues/22835).
    -->
    <PropertyGroup>
      <PathMap>$(RepoRoot)=$(DeterministicSourceRoot)</PathMap>
    </PropertyGroup>

    <PropertyGroup Condition="'@(SourceRoot)' != ''">
      <PathMap>$(PathMap),@(SourceRoot->'%(Identity)=/_%(UniqueName)/', ',')</PathMap>
    </PropertyGroup>
  </Target>
</Project>