<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project DefaultTargets="Publish">
  <!--
    Required variables:
      VersionsPropsPath          Versions.props path.
      FixedVersionsPropsPath     FixedVersions.props path.
      ExpectedFeedUrl            Target feed URL.
      AccountKey                 Account key.
  -->

  <Import Project="BuildStep.props" />

  <Import Project="$(NuGetPackageRoot)microsoft.dotnet.build.tasks.feed\$(MicrosoftDotNetBuildTasksFeedVersion)\build\Microsoft.DotNet.Build.Tasks.Feed.targets" />

  <Target Name="Publish">
    <PropertyGroup>
      <SymbolPackagesDir>$(ArtifactsTmpDir)SymbolPackages\</SymbolPackagesDir>
    </PropertyGroup>

    <ItemGroup>
      <ExistingSymbolPackages Include="$(PackageOutputPath)*.symbols.nupkg" />

      <PackagesToPublish Include="$(PackageOutputPath)*.nupkg" />
      <PackagesToPublish Remove="@(ExistingSymbolPackages)" />
      <PackagesToPublish Update="@(PackagesToPublish)">
        <SymbolPackageToGenerate Condition="!Exists('%(RootDir)%(Directory)%(Filename).symbols.nupkg')">$(SymbolPackagesDir)%(Filename).symbols.nupkg</SymbolPackageToGenerate>
      </PackagesToPublish>

      <SymbolPackagesToGenerate Include="@(PackagesToPublish->'%(SymbolPackageToGenerate)')" Condition="'%(PackagesToPublish.SymbolPackageToGenerate)' != ''">
        <OriginalPackage>%(PackagesToPublish.Identity)</OriginalPackage>
      </SymbolPackagesToGenerate>
    </ItemGroup>

    <!--
      If a symbol package doesn't exist yet we assume that the regular package contains Portable PDBs.
      Such packages can act as symbol packages since they have the same structure.
      We just need to copy them to *.symbols.nupkg.
    -->
    <MakeDir Directories="$(SymbolPackagesDir)" />
    <Copy SourceFiles="@(SymbolPackagesToGenerate->'%(OriginalPackage)')" DestinationFiles="@(SymbolPackagesToGenerate)" />

    <PushToBlobFeed ExpectedFeedUrl="$(ExpectedFeedUrl)"
                    AccountKey="$(AccountKey)"
                    ItemsToPush="@(PackagesToPublish);@(ExistingSymbolPackages);@(SymbolPackagesToGenerate)"
                    ManifestName="$(BUILD_REPOSITORY_NAME)"
                    ManifestBranch="$(BUILD_SOURCEBRANCH)"
                    ManifestBuildId="$(BUILD_BUILDNUMBER)"
                    ManifestCommit="$(BUILD_SOURCEVERSION)" />
  </Target>

</Project>